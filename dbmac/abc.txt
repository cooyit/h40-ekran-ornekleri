CREATE TABLE "Diller"
(
	"Dil_Id" serial NOT NULL,
	"DilAdi" varchar(50) NULL
)
;

CREATE TABLE "Ulkeler"
(
	"Ulke_Id" serial NOT NULL,
	"UlkeAdi" varchar(128) NULL
)
;

CREATE TABLE "Sehirler"
(
	"Sehir_Id" serial NOT NULL,
	"Ulke_Id" integer NULL,
	"SehirAdi" varchar(50) NULL,
	"BolgeAdi" varchar(50) NULL,
	"NUTSAdi" varchar(50) NULL
)


CREATE TABLE "Modeller"
(
	"Model_Id" serial NOT NULL,
	"UstModel_Id" integer NULL,
	"ModelTuru_Id" integer NULL,
	"ModelResmiAdi" varchar(128) NOT NULL,
	"ModelAliasAdi" varchar(128) NOT NULL,
	"KullaniciKapsami" varchar(50) NULL,	-- 	- Hastane adına tek anket 	- Farklı kullanıcı türlerine göre özelleşmiş anket  Eğer ikincisi seçilirse, bu model ile Kullanıcı türü tablosu arasındaki tablo (ModelKullaniciTuru) ilgili kullanıcı türleri seçilerek doldurulur.  Bu sayede, ilgili anket herhangi bir hastane için atanırken (oluşturulurken) her bir kullanıcı türü içn tanımlanan anket boyut, kriter ve göstergeleri ayrı ayrı oluşturulur.
	"Aktif" boolean NOT NULL,
	"DevreyeAlmaTahiri" date NULL,
	"DevredenKaldirilmaTarihi" date NULL,
	"DilAdi" varchar(50) NULL
)
;


CREATE TABLE "Boyutlar"
(
	"Boyut_Id" serial NOT NULL,
	"UstBoyut_Id" integer NULL,
	"Boyut_Id_Hiyerarsi" integer NULL,
	"BoyutAdi" varchar(255) NOT NULL,
	"BoyutAllias" varchar(255) NOT NULL,
	"BoyutEtiketleri" text NULL,
	"Hiyerarsi" integer NULL,	-- Hiyerarsi niteliği, model, vb. konudaki seviyeden farklı. buradaki hiyerarsi, sadece boyutları hiyerarşik olarak göstermek istediğimizde JS, vb. TreeView komponentlerin kullandığı hiyerarşi seviyesini veritabanında tutmak içindir.
	"Aktif" boolean NULL,
	"DilAdi" varchar(50) NULL
)
;

CREATE TABLE "Kriterler"
(
	"Kriter_Id" serial NOT NULL,
	"UstKriter_Id" integer NULL,
	"KriterAdi" text NULL,
	"KriterAlias" varchar(50) NULL,
	"KriterEtiketleri" text NULL,
	"DilAdi" varchar(50) NULL,
	"Aktif" boolean NULL
)
;

CREATE TABLE "Gostergeler"
(
	"Gosterge_Id" serial NOT NULL,
	"UstGosterge_Id" integer NULL,
	"KriterCevapTuru_Id" integer NULL,
	"GostergeAdi" text NOT NULL,	-- GostergeAdı, göstergenin soru veya gereksinim cümlesidir. Örnek soru: "Hastalar ile hekimler arasında etkileşimi artırmak amacıyla mesajlaşma fonksiyonu bulunmaktadır  Lütfen yüzdeyi belirtiniz:" Bu tür bir kayıtta KriterCevapTuru alanında "Beşli Likert" seçili olabilir.  Örnek Soru: "HBYS'de saklanan ve hekimlerin eriştiği Laboratuvar, Radyoloji ve Kardiyoloji raporlarının yüzdesini yazınız"  Bu tür bir kayıtta KriterCevapTuru alanında "Yüzde" seçili olabilir.  0% 1-25 % 26-49 % 50-94 % 95-100 %
	"GostergeAllias" varchar(255) NOT NULL,
	"GostergeEtiketleri" text NULL,	-- Bir gösterge tanımlandığında onun hangi kriterler girebileceğine dair çağrılım yapmaıs için etiketler kullanacağız.
	"GostergeAciklamasi" text NULL,
	"GostergeOrnekUygulama" text NULL,
	"DilAdi" varchar(50) NULL,
	"Aktif" boolean NULL
)
;



-----


CREATE TABLE "ModelTuru"
(
	"ModelTuru_Id" serial NOT NULL,
	"ModelTuruAdi" varchar(50) NULL	-- 	- Puan esaslı 	- Seviye esaslı
)
;

CREATE TABLE "ModelSeviye"
(
	"ModelSeviye_Id" serial NOT NULL,
	"Model_Id" integer NULL,
	"Seviye_Id" integer NULL
)
;

CREATE TABLE "Seviyeler"
(
	"Seviye_Id" serial NOT NULL,
	"UstSeviyel_Id" integer NULL,
	"SeviyeAdi" varchar(50) NULL,
	"DilAdi" varchar(50) NULL
)
;

CREATE TABLE "HastaneTurleri"
(
	"HastaneTuru_Id" serial NOT NULL,
	"UstHastaneTuru_Id" integer NULL,
	"HastaneTur_Adi" varchar(50) NULL,
	"DilAdi" varchar(50) NULL
)
;

CREATE TABLE "KullanıcıTurleri"
(
	"KullaniciTuru_Id" serial NOT NULL,
	"UstKullaniciTuru_Id" integer NULL,
	"KullaniciTuruAdi" varchar(50) NULL,
	"Aciklama" text NULL,
	"DilAdi" varchar(50) NULL
)
;

CREATE TABLE "ModelHastaneTuru"
(
	"ModelHastaneTuru_Id" serial NOT NULL,
	"Model_Id" integer NULL,
	"HastaneTuru_Id" integer NULL
)
;

CREATE TABLE "ModelKullaniciKapsami"
(
	"ModelKullaniciKapsami_Id" serial NOT NULL,
	"KullaniciTuru_Id" integer NULL,
	"Model_Id" integer NULL
)
;

CREATE TABLE "UlkelerDiller"
(
	"UlkeDil_Id" serial NOT NULL,
	"Ulke_Id" integer NULL,
	"Dil_Id" integer NULL,
	"Varsayilan" boolean NULL	-- Her ülkenin sadece bir tane varsayılan dili olmalı. Ama ülke için birden fazla dil tanımlanabilir. Bu sayede, örneğin Türkiye'deki bir hastane, tercih ederse anket formunu açtığında, birden fazla dil seçeneği ile karşısına gelen ankette, aynı sorunun diğer uygun dildeki versiyonunu da görebilir.
)
;



CREATE TABLE "ModelUlke"
(
	"ModelUlke_Id" serial NOT NULL,
	"Ulke_Id" integer NULL,
	"Model_Id" integer NULL,
	"DevreyeAlmaTarihi" date NULL,	-- Modelin ilgili ülkedeki devreye alma tarihi
	"DilAdi" varchar(50) NULL,
	"Aktif" boolean NULL	-- Bir modelin, bir ülkede geçerli olması için, ilgili ülkeye atanması gerekir. Kayıt ilk defa açıldığında Aktif=0 set edilir. Ülke atama işlemleri bu tabloda tutulur. Ama işlemi geçerli oldıuğunda Aktif=1 set edilir.
)
;




CREATE TABLE "GostergeCevaplari"
(
	"GostergeCevap_Id" serial NOT NULL,
	"UstGostergeCevap_Id" integer NULL,
	"Gosterge_Id" integer NULL,
	"ModelBoyutKriterGosterge_Id" integer NULL,
	"GostergeCevapTuru_Id" integer NULL,
	"KullaniciTuru_Id" integer NULL,
	"GostergeCevapOnemi" varchar(50) NULL,	-- 	- Minör 	- Majör 	- Zorunlu
	"GostergeCevapAdi" varchar(50) NULL,	--  	1. Eğer model Puan Esaslı ise (SKS gibi) burada Tamamen Karşılanıyor, Kısmen Karşılanıyor ve Karşılanmıyor gibi seçenekler ve bumların karşılığı olan puanlar yer alabilir. 	2. Eğer model seviye esaslı ise, bu defa göstergenin cevap seçeneklerine göre (örneğin beşli likert, vb.) ayrı ayrı puan ataması yapılır.   Her iki durumda da puan bilgisi GöstergeCevapPuani alanına yazılır.
	"GostergeCevapPuani" integer NULL,	--  	1. Eğer model Puan Esaslı ise (SKS gibi) burada Tamamen Karşılanıyor, Kısmen Karşılanıyor ve Karşılanmıyor gibi seçenekler ve bumların karşılığı olan puanlar yer alabilir. 	2. Eğer model seviye esaslı ise, bu defa göstergenin cevap seçeneklerine göre (örneğin beşli likert, vb.) ayrı ayrı puan ataması yapılır.   Her iki durumda da puan bilgisi GöstergeCevapPuani alanına yazılır.
	"GosterimSirasi" integer NULL,
	"DilAdi" varchar(50) NULL,	-- İlk kayıt açıldığında defauyls dil Türkçe olacak. Ancak aynı seçenek için başka dilde kayıt açılması istenirse yeni kayıt alılırken, UstGosterge_Id olarak ilk kayı seçip dil seçeneği ve GostergeCevapAdi alanları doldurulark kayıt açılacak.
	"Aktif" boolean NULL
)
;


CREATE TABLE "GostergeCervabinaOneriler"
(
	"GostergeCevabinaOneriler_Id" serial NOT NULL,
	"UstGostergeCevabinaOneriler_Id" integer NULL,
	"GostergeCevap_Id" integer NULL,
	"KullaniciTuru_Id" integer NULL,
	"GostergeCevabinaOneri" text NOT NULL,
	"DilAdi" varchar(50) NULL
)
;


CREATE TABLE "GostergeCevapTuru"
(
	"GostergeCevapTuru_Id" serial NOT NULL,
	"GostergeCevapTuru" varchar(50) NOT NULL	--  	1. Evet/Hayır 	2. K/KK/KM (Karşılıyor/KısmenKarılıyor/Karşılamıyor) 	3. Yüzde (Sayısal) 	4. Yüzde (Kademeli) 	5. Beşli Likert
)
;


CREATE TABLE "GostergeCevapSablonu"
(
	"GostergeCevapSablonu_Id" serial NOT NULL,
	"UstGostergeCevapSablonu_Id" integer NULL,
	"GostergeCevapTuru_Id" integer NULL,
	"GostergeCevapSablonAdi" varchar(50) NULL,	--  	1. Evet/Hayır 	2. K/KK/KM (Karşılıyor/KısmenKarılıyor/Karşılamıyor) 	3. Yüzde (Sayısal) 	4. Yüzde (Kademeli) 	5. Beşli Likert
	"GöstergeCevapAdi" varchar(50) NULL,	--  	1. Eğer model Puan Esaslı ise (SKS gibi) burada Tamamen Karşılanıyor, Kısmen Karşılanıyor ve Karşılanmıyor gibi seçenekler ve bumların karşılığı olan puanlar yer alabilir. 	2. Eğer model seviye esaslı ise, bu defa göstergenin cevap seçeneklerine göre (örneğin beşli likert, vb.) ayrı ayrı puan ataması yapılır.   Her iki durumda da puan bilgisi GöstergeCevapPuani alanına yazılır.
	"GostergeCevapPuani" integer NULL,	--  	1. Eğer model Puan Esaslı ise (SKS gibi) burada Tamamen Karşılanıyor, Kısmen Karşılanıyor ve Karşılanmıyor gibi seçenekler ve bumların karşılığı olan puanlar yer alabilir. 	2. Eğer model seviye esaslı ise, bu defa göstergenin cevap seçeneklerine göre (örneğin beşli likert, vb.) ayrı ayrı puan ataması yapılır.   Her iki durumda da puan bilgisi GöstergeCevapPuani alanına yazılır.
	"DilAdi" varchar(50) NULL
)
;


CREATE TABLE "Eslesmeler"
(
	"Eslesme_Id" serial NOT NULL,
	"Model_Id" serial NULL,
	"Boyut_Id" serial NULL,
	"Kriter_Id" serial NULL,
	"Seviye_Id" serial NULL,	-- Eşleşmeler yapılırken, özellikle Kriterler için, karşı geldikleri seviye yazılır. Ancak ilgili kriterin (veya boyutun) karşılanma düzeyi aşağıdaki tabloda mak-min puan aralıklarıyla bilrikte ayrıca kayda alınmalıdır.
	"Gosterge_Id" serial NULL,
	"GostergeCevap_Id" serial NULL,
	"GostergeCevabinaOneriler_Id" serial NULL,
	"KullaniciTuru_Id" serial NULL,
	"Turu" varchar(50) NULL,	-- 	- Model 	- Boyut 	- Kriter 	- Gösterge 	- Gösterge Cevap 	- Gösterge Cevap Öneri
	"Agirligi" integer NULL,
	"GosterimSirasi" integer NULL,
	"Aciklama" text NULL,
	"Aktif" boolean NULL
)
;


CREATE TABLE "KarsilanmaDuzeyi"
(
	"KarsilanmaDuzeyi_Id" serial NOT NULL,
	"UstKarsilanmaDuzeyi_Id" integer NULL,
	"Eslesme_Id" serial NULL,	-- Model, Boyut ve Kriterlerin karşılanma düzeylerinin sınırlarını (mak-min puanlarını) bu tabloda tutuyoruz. Bu nedenle bir Eslesmeler tablosundaki bir kaydın birden fazla karşılanma düzeyi olabilecektir. Bu detaylar da Karşılanma Düzeyi tablosunda tutulacaktır.
	"Seviye_Id" integer NULL,	-- Modelin ve boyutların karşılanma düzeyi kimi modellerde seviye ile ilişkilendiririlebilir. Bu durumda Her bir model ve model altındaki her bir boyut için seviyeler tablosu ile ilişkili şekilde min-maks değerler vs belirlenip karşılanma düzeyinin adı yazılmalı.
	"Turu" varchar(50) NULL,	-- 	- Model 	- Boyut 	- Kriter
	"MaksimumPuan" integer NULL,
	"MinimumPuan" integer NULL,
	"KarsilanmaDuzeyi" varchar(64) NULL,	-- Eğer model puan esaslı ise göstergelerden itibaren hesaplanan puanların karşılık geldiği aralık (maksimum-minimum) burada tanımlanır ve bu puan aralığına denk gelen Karşılanma düzryi ifadesi bu alana (KarsilanmaDuzeyi) yazılır. Örneğin SKS'de Tamamen Karşılanıyor, Kısmen Karşılanıyor ve Karşılanmıyor gibi ifadeler bu alan yazılır. Seviye esaslı modellerde de benzer şekilde puan aralıkları oluşturulur ve her aralıa denk gelen ifadeler uygun şekilde yazılır.  Bu formda farklı dilllerde giriş yapacğaımız zaman, minimum-maksimum puanlar vs yeniden girilmez, sadece KarsilanmaDuzeyi alanı farklı dilde yazılır.
	"DilAdi" varchar(50) NULL	-- Burada maksimum-minimum puanlar dil değiştiğinde sabit kalıyor. BU nedenle yeni dil eklentisi tanımladığımızda sadece Karşılanma Düzeyi (Varchar) kısmında değişklik yapılacak.
)
;



CREATE TABLE "Kullanicilar"
(
	"Kullanici_Id" serial NOT NULL,
	"Ulke_Id" integer NOT NULL,	-- Kullanıcı ilk kayıt olduğunda ülkesini seçmeli. İlk giriş yaptığında ise, bu ülkeye tanımlanmış olan modelleri listeleyip inceleyip onlardan birini sepete ekleyip ödemesini yapabilmeli. Daha sonra da ilgili modele kullanıcı delege edebilmeli.
	"KullaniciTuru_Id" integer NULL,
	"KullaniciAdi" varchar(50) NULL,
	"KullaniciSoyadi" varchar(50) NOT NULL,
	"Sifre" varchar(50) NOT NULL,
	"ePosta" varchar(50) NULL,
	"ePostaDogrulandi" boolean NULL,	-- Kayıt süreci içerisinde kullanıcı e-postasının doğrulanması gerekiyor. Kayıt ilk açıldığında bu alan 0 set edilir, doğrulama linki çalıştığında bu alan 1 yapılır. 
	"MobilTelefon" varchar(50) NULL,
	"IrtibatTercihi" varchar(50) NULL,	-- Seçenekler (ikon şeklinde):  	- Telefon 	- ePosta
	"Unvan" varchar(50) NULL,
	"ArayuzDilAdi" varchar(50) NULL,	-- Kullanıcının profilinde seçmiş olduğu "Arayüz Dili" seçeneği buraya kaydedilmeli. Bu seçenek, ekran görünümünü bağlamaktadır.
	"DilAdi" varchar(50) NULL	-- Kullanıcının profilinde seçmiş olduğu "Model/Anket Dili" seçeneği buraya kaydedilmeli. Bu seçenek, anketlerin soruları, vb. içerikle ilgilidir.
)
;


CREATE TABLE "Hastaneler"
(
	"Hastane_Id" serial NOT NULL,
	"Ulke_Id" integer NULL,
	"Sehir_Id" integer NULL,
	"HastaneTuru_Id" integer NULL,
	"HastaneAdı" varchar(255) NULL,
	"KurulusYili" integer NULL,
	"HastaneEczanesi" boolean NULL,
	"AyaktanTedavi" boolean NULL,
	"YatarakTedavi" boolean NULL,
	"YatakSayisi" integer NULL,
	"AcilServis" boolean NULL,
	"AcilServisSeviyesi" varchar(50) NULL,	-- Burada ComboBox ile aşağıdaki seçenkler gösterilebilir: 1. Seviye 2. Seviye 3. Seviye
	"YBU" boolean NULL,
	"YBUYatakSayisi" varchar(50) NULL,
	"YBUSeviyesi" varchar(50) NULL,	-- Burada ComboBox ile aşağıdaki seçenkler gösterilebilir: 1. Seviye 2. Seviye 3. Seviye
	"Aktif" boolean NULL
)
;



CREATE TABLE "HastaneModel"
(
	"HastaneModel_Id" serial NOT NULL,
	"Hastane_Id" integer NULL,
	"Model_Id" integer NULL,
	"DilAdi" varchar(50) NULL,	-- Bir hastaneye aynı anket sadece bir dilde atanır. Atandığı dil de buraya yazılır. Bu sayede, anket fiziksel olarak oluşturulurken de ilgili taablolar aynı dile uygun olan ifadelerle doldurulur
	"AtanmaTarihi" date NULL,
	"AtamayiYapan" integer NULL,
	"SonGecerlilikTarihi" date NULL,	-- Anket tanımlanırken, belirli bir süreliğine açılıyor olabilir. Bu durumda bu tarih seçilir. İlgili anket hastane tarafından açılmak istendiğinde bu tarihin geçip geçmediği kontrol edilir.
	"Aktif" boolean NULL
)
;



CREATE TABLE "HastaneModelKullanicilar"
(
	"HastaneModelKullanici_Id" serial NOT NULL,
	"HastaneModel_Id" integer NULL,
	"Kullanici_Id" integer NULL,
	"KullaniciTuru_Id" integer NULL,	-- Manuel eklenen ve delege edilen kullanıcılar için de Kullanıcı Türü seçilmeli.
	"KayitliKullanici" boolean NULL,	-- Hastane için tanımlanan anketletin daha önce mutlaka kayıtlı bir kullanıcı tarafından doldurulması ZARURİ DEĞİL. Dolayısıyla, sadece e-posta ve isim girerek de ankete DELEGE ATANABİLİR. Eğer kayıtlı kullanıcı ise, listeden seçip kullanıcının adı-soyadı sisteme otomatik getirilir.
	"DelegeKullaniciAdi" varchar(128) NULL,
	"DelegeKullaniciEPosta" varchar(64) NULL,
	"AnketURL" text NULL,
	"DelasyonTarihi" date NULL
)
;

CREATE TABLE "Roller"
(
	"Rol_Id" serial NOT NULL,
	"RolAdi" varchar(50) NULL,	-- 	- Model Yöneticisi 	- Anket Yöneticisi 	- Muhasebeci 	- Model Kalite Uzmanı 	- Hastane Kullanıcısı
	"RolKodu" varchar(50) NULL
)
;

CREATE TABLE "KullanicilarRoller"
(
	"KullaniciRol_Id" serial NOT NULL,
	"Kullanici_Id" integer NULL,
	"Rol_Id" integer NULL
)
;

CREATE TABLE "RolYetki"
(
	"RolYetki_Id" serial NOT NULL,
	"Rol_Id" integer NULL,
	"YetkiKodu" varchar(50) NULL
)
;